from aiogram import Bot, Dispatcher, types
from aiogram.types import (
    InlineKeyboardButton, InlineKeyboardMarkup
)
from aiogram.filters import CommandStart
import asyncio
from config import *



bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
user_applications = {}

@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="register")]
        ]
    )
    await message.answer(
"""
–ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü ‚Äì —à–∞–Ω—Å –Ω–∞—á–∞—Ç—å –∂–∏–∑–Ω—å —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞?

üîπ –£—Å—Ç–∞–ª–∏ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∑–≤–æ–Ω–∫–æ–≤ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–æ–≤?
üîπ –ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü ‚Äì –∫–∞–∫ –∑–∞–º–∫–Ω—É—Ç—ã–π –∫—Ä—É–≥: –∑–∞—Ä–ø–ª–∞—Ç–∞ —É—Ö–æ–¥–∏—Ç –Ω–∞ –¥–æ–ª–≥–∏?
üîπ –°—Ç—Ä–∞—à–Ω–æ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ø–æ—á—Ç—É, –±—Ä–∞—Ç—å —Ç—Ä—É–±–∫—É, –±–æ–∏—Ç–µ—Å—å, —á—Ç–æ –æ–ø–∏—Å–∞–ª–∏ –∏–º—É—â–µ—Å—Ç–≤–æ?

–°—Ç–æ–ø! –ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ –∂–∏—Ç—å –≤ —Å—Ç—Ä–µ—Å—Å–µ –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –≥–∞—Å–∏—Ç—å –¥–æ–ª–≥–∏. –ó–∞–∫–æ–Ω–Ω–æ–µ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ ‚Äì —ç—Ç–æ –≤–∞—à –≤—ã—Ö–æ–¥!

–ü–æ—á–µ–º—É –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ ‚Äì —ç—Ç–æ —Å–ø–∞—Å–µ–Ω–∏–µ?
‚úÖ –°–ø–∏—à–µ–º –¥–æ 100% –¥–æ–ª–≥–æ–≤ ‚Äì –¥–∞–∂–µ –ø–æ –∫—Ä–µ–¥–∏—Ç–∞–º, –∑–∞–π–º–∞–º –∏ —à—Ç—Ä–∞—Ñ–∞–º.
‚úÖ –û—Å—Ç–∞–Ω–æ–≤–∏–º –∑–≤–æ–Ω–∫–∏ –∫–æ–ª–ª–µ–∫—Ç–æ—Ä–æ–≤, —Å—É–¥—ã –∏ –ø—Ä–∏—Å—Ç–∞–≤—ã ‚Äì –∑–∞–∫–æ–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞.
‚úÖ –°–æ—Ö—Ä–∞–Ω–∏–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –∂–∏–ª—å–µ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≤–µ—â–∏ ‚Äì –∏—Ö –Ω–µ –∑–∞–±–µ—Ä—É—Ç.
‚úÖ –ù–æ–≤—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å—Ç–∞—Ä—Ç ‚Äì –±–µ–∑ –¥–æ–ª–≥–æ–≤–æ–≥–æ –±—Ä–µ–º–µ–Ω–∏.

–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
1Ô∏è‚É£ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Äì –æ—Ü–µ–Ω–∏–º –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é.
2Ô∏è‚É£ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ‚Äì —Å–¥–µ–ª–∞–µ–º –≤—Å—ë –∑–∞ –≤–∞—Å.
3Ô∏è‚É£ –°–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—É–¥–µ ‚Äì –¥–æ–±—å–µ–º—Å—è —Å–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–≥–æ–≤.
–í–∞—à–∞ –∂–µ –∑–∞–¥–∞—á–∞ –ø—Ä–æ—Å—Ç–∞—è ‚Äì –∫—Ä–µ–¥–∏—Ç—ã –Ω–µ –±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ, —Ç–µ–∫—É—â–∏–µ –Ω–µ –ø–ª–∞—Ç–∏—Ç—å, –∏–º—É—â–µ—Å—Ç–≤–æ –Ω–µ –ø–æ–∫—É–ø–∞—Ç—å/–ø—Ä–æ–¥–∞–≤–∞—Ç—å. 

–ú—ã –ø–æ–º–æ–∂–µ–º ‚Äì –±–µ–∑ –ø—É—Å—Ç—ã—Ö –æ–±–µ—â–∞–Ω–∏–π
–ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ ¬´–æ—Ñ–æ—Ä–º–ª—è–µ–º –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ¬ª ‚Äì –º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞–º –∂–∏–∑–Ω—å.

–ù–µ –∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –¥–æ–ª–≥–∏ –ø–æ–≥—É–±—è—Ç –≤–∞—à–µ –±—É–¥—É—â–µ–µ!
–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äì –∏ —á–µ—Ä–µ–∑ –ø–æ–ª–≥–æ–¥–∞ —Å–º–æ–∂–µ—Ç–µ –≤–∑–¥–æ—Ö–Ω—É—Ç—å —Å–≤–æ–±–æ–¥–Ω–æ.

–≠—Ç–æ –≤–∞—à —à–∞–Ω—Å –Ω–∞ –Ω–æ–≤—É—é –∂–∏–∑–Ω—å. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∏–º!""",
        reply_markup=keyboard
    )

@dp.callback_query(lambda c: c.data == "register")
async def handle_registration(callback: types.CallbackQuery):
    user = callback.from_user
    full_name = f"{user.first_name or ''} {user.last_name or ''}".strip()
    username = f"@{user.username}" if user.username else "–Ω–µ—Ç"

    user_applications[str(user.id)] = full_name

    application_text = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n"
        f"üë§ –ò–º—è: {full_name}\n"
        f"üÜî ID: {user.id}\n"
        f"üì© Username: {username}"
    )

    confirm_btn = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm_{user.id}")]
        ]
    )

    await bot.send_message(chat_id=ADMIN_ID, text=application_text, reply_markup=confirm_btn)
    await callback.message.edit_text("‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ.")
    await callback.answer()

@dp.callback_query(lambda c: c.data.startswith("confirm_"))
async def confirm_application(callback: types.CallbackQuery):
    user_id = int(callback.data.split("_")[1])
    name = user_applications.get(str(user_id), "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")

    await bot.send_message(chat_id=user_id, text=f"""
üéâ {name}, –≤–∞—à–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!
–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–∞ –≤–∞–∂–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É, —á—Ç–æ–±—ã —é—Ä–∏—Å—Ç –º–æ–≥ –æ—Ü–µ–Ω–∏—Ç—å –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ.
https://docs.google.com/forms/d/e/1FAIpQLSegf5gGuKxdegNJs8_49PusHtrSrtzP88-7ed2CHipR3W_jXw/viewform?usp=sharing&ouid=109953191210317206978""")
    await callback.answer("–í—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –∑–∞—è–≤–∫—É.")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())